{"version":3,"sources":["configs/config.js","configs/store.jsx","layouts/login.jsx","components/viewSelector.jsx","components/savedSelects.jsx","components/selectFriend.jsx","components/makeRates.jsx","components/makeSelect.jsx","components/fetchWaiting.jsx","components/fillSelect.jsx","components/showProfile.jsx","layouts/view.jsx","layouts/index.jsx","App.jsx","index.js"],"names":["config","API","host","image","types","foods","makeSelect","authFacebook","userAuth","userName","userID","userAdd","newestSelect","waitingSelect","putSelect","deleteSelect","view","saved","select","waiting","profile","views","StoreContext","createContext","StoreProvider","children","useState","user","setUser","setTypes","setFoods","readSavedUser","a","readUser","JSON","parse","localStorage","getItem","hasOwnProperty","axios","get","auth","restoredUser","data","perv","fetchTypes","fetchedTypes","prev","fetchFoods","sort","p","n","Math","random","storeValues","useEffect","setItem","stringify","Provider","value","Login","useContext","token","setToken","login","e","preventDefault","res","className","type","onChange","target","href","onClick","ViewSelector","curr","selectView","setView","btn","closest","id","SavedSelects","selects","setSelects","fetchSelects","_id","length","i","j","participants","participant","participantBody","console","error","body","name","picture","url","render","map","elem","date","split","src","alt","style","maxWidth","result","index","border","filter","el","color","boxShadow","fontSize","fontWeight","lineHeight","textShadow","title","img","SelectFriend","userFriends","setFriend","friends","setFriends","fetchUsers","fetchedFriends","Array","friend","MakeRates","sendSelect","onList","setOnList","addToList","score","classList","add","flexGrow","textAlign","backgroundColor","MakeSelect","set","post","realizedBy","sets","then","finally","FetchWaiting","setWaiting","fetchOnLIst","fetchedData","delete","FillSelect","put","ShowProfile","searchs","setSearchs","setValue","fetchFriends","fetchSearchs","trim","fetchedSearchs","includes","addFriend","patchUser","logout","clear","renderFriends","placeholder","View","swipe","setSwipe","touch","x","y","handleTouchStart","event","firstTouch","touches","getTouch","clientX","clientY","handleTouchMove","next_x","next_y","delta_x","delta_y","abs","window","innerWidth","max","indexOf","document","addEventListener","removeEventListener","Index","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a682715.chunk.js","sourcesContent":["/*  Config object\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst config = {\n\n    // API endpoinds\n    API: {\n\n        host: 'https://fooder-back.herokuapp.com/',\n\n        image: 'https://fooder-back.herokuapp.com/img/',\n\n        types: 'https://fooder-back.herokuapp.com/type/',\n\n        foods: 'https://fooder-back.herokuapp.com/food/',\n\n        makeSelect: 'https://fooder-back.herokuapp.com/select/',\n\n        authFacebook: 'https://fooder-back.herokuapp.com/auth/facebook/',\n\n        userAuth: 'https://fooder-back.herokuapp.com/user/auth/',\n\n        userName: 'https://fooder-back.herokuapp.com/user/name/',\n\n        userID: 'https://fooder-back.herokuapp.com/user/id/',\n\n        userAdd: 'https://fooder-back.herokuapp.com/user/friend/',\n\n        newestSelect: 'https://fooder-back.herokuapp.com/select/newest/',\n\n        waitingSelect: 'https://fooder-back.herokuapp.com/select/waiting/',\n\n        putSelect: 'https://fooder-back.herokuapp.com/select/id/',\n\n        deleteSelect: 'https://fooder-back.herokuapp.com/select/',\n    },\n\n    // views values\n    view: {\n\n        saved: 'saved',\n        \n        select: 'select',\n\n        waiting: 'waiting',\n        \n        profile: 'profile',\n    },\n\n    views: [ 'saved', 'select', 'waiting', 'profile' ],\n};\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default config;","import React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// global config\nimport config from './config';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\n// store context init\nconst StoreContext = createContext( null );\n\n// store provider wrapper\nconst StoreProvider = ({ children }) => {\n\n    const [ user, setUser ] = useState( null );\n    const [ types, setTypes ] = useState( [] );\n    const [ foods, setFoods ] = useState( [] );\n\n    // reads and sets saved user\n    const readSavedUser = async () => {\n\n        const readUser = JSON.parse( localStorage.getItem( 'user' ));\n\n        if( readUser?.hasOwnProperty( 'auth' )) {\n            \n            const restoredUser = await axios.get( config.API.userAuth + readUser.auth );\n\n            if( restoredUser.data ) { setUser( perv => restoredUser.data ) }\n        }\n    };\n    \n    // saves usser on localStorage\n    const saveUser = () => {\n\n        localStorage.setItem( 'user', JSON.stringify( user ));\n    };\n\n    // reads available food types\n    const fetchTypes = async () => {\n\n        const fetchedTypes = await axios.get( config.API.types );\n\n        setTypes( prev => fetchedTypes.data );\n    };\n\n    // reads available foods\n    const fetchFoods = async () => {\n\n        const fetchedTypes = await axios.get( config.API.foods );\n\n        setFoods( prev => fetchedTypes.data.sort(( p, n ) => 0.5 - Math.random()));\n    };\n\n    /*   *   *   *   *   *   *   *   */\n\n    const storeValues = {\n\n        user, setUser,  //  user propeties\n\n        types, setTypes,    //  food types propeties\n\n        foods, setFoods,    //  available foods\n    };\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        if( !user ) {\n\n            readSavedUser();\n        }\n\n        if( user ) {\n\n            saveUser();\n\n            fetchTypes();\n\n            fetchFoods();\n        }\n\n    }, [ user ]);   // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <StoreContext.Provider value={ storeValues } >\n            \n        { children }\n\n    </StoreContext.Provider>\n    );\n};\n\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default StoreProvider;\nexport { StoreContext, StoreProvider };","import React, { useContext, useState } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst Login = () => {\n\n    const { setUser } = useContext( StoreContext );\n\n    const [ token, setToken ] = useState( '' );\n\n    /*   *   *   *   *   *   *   *   */\n    \n    const updateToken = ( e ) => {\n\n        setToken( prev => e.target.value )\n    };\n\n    const login = async ( e ) => {\n\n        e.preventDefault();\n        \n        const res = await axios.get( config.API.userAuth + token );\n        const user = res.data;\n\n        if( user?.auth === token ) {\n\n            setUser( user );\n        }\n    };\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <section className=\"container row my-auto\">\n\n            <form className=\"col-12 col-md-8 mx-auto p-2 card shadow bg-light\">\n\n                <div className=\"m-3\">\n                    <label className=\"form-label lead\">Twój token logowania</label>\n                    <input className=\"form-control\" type=\"password\" onChange={ updateToken } value={ token } />\n                </div>\n                \n\n                <div className=\"m-3\">\n                    <a target=\"blank\" href={ config.API.authFacebook } className=\"btn btn-primary me-1\">Pobierz z Facebook</a>\n                    <button type=\"button\" className=\"btn btn-success ms-1\" onClick={ login }>Zaloguj</button>\n                </div>\n\n            </form>\n\n        </section>\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default Login;","import React from 'react';\n\n// fonts module\nimport { FaUser, FaCalendarAlt, FaCalendarCheck, FaCalendarPlus } from 'react-icons/fa';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst ViewSelector = ({ curr, views, selectView }) => {\n\n\n    const setView = ( e ) => {\n\n        const btn = e.target.closest( 'button' );\n\n        selectView( prev => btn.value )\n    };\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <nav id=\"selector\" className=\"row p-3\">\n\n        <button onClick={ setView } value={ views.saved } type=\"button\" className={ `col-2 selectItem mx-auto ${ curr === views.saved && 'active'}` }><FaCalendarCheck /></button>\n\n        <button onClick={ setView } value={ views.select } type=\"button\" className={ `col-2 selectItem mx-auto ${ curr === views.select && 'active'}` }><FaCalendarPlus /></button>\n\n        <button onClick={ setView } value={ views.waiting } type=\"button\" className={ `col-2 selectItem mx-auto ${ curr === views.waiting && 'active'}` }><FaCalendarAlt /></button>\n\n        <button onClick={ setView } value={ views.profile } type=\"button\" className={ `col-2 selectItem mx-auto ${ curr === views.profile && 'active'}` }><FaUser /></button>\n\n    </nav>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default ViewSelector;","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst SavedSelects = () => {\n\n    const { user, types } = useContext( StoreContext );\n\n    const [ selects, setSelects ] = useState( [] );\n\n    const fetchSelects = async () => {\n\n        const fetchSelects = await axios.get( config.API.newestSelect + user._id );\n\n        if( fetchSelects.data.length ) {\n\n            for( let i = 0; i < fetchSelects.data.length; i++ ) {\n\n                const select = fetchSelects.data[ i ];\n\n                for( let j = 0; j < select.participants.length; j++ ) {\n\n                    const participant = select.participants[ j ];\n\n                    try {\n\n                        const res = await axios.get( config.API.userID + participant );\n                        const participantBody = res.data;\n    \n                        select.participants[ j ] = participantBody;\n\n                    } catch( err ) {\n\n                        console.error( err );\n\n                        select.participants[ j ] = {\n                            id: '0',\n                            body: {\n                                name: 'user',\n                                picture: {\n                                    data: {\n                                        url: ''\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            setSelects( prev => fetchSelects.data );\n        }\n    };\n\n    const render = selects.map( elem => \n\n        <div key={ elem._id } className=\"card col-12 p-2 m-1\" >\n\n            <p><em>{ elem.date.split( 'T' )[0] }</em></p>\n\n            {\n                elem.participants.map( participant =>\n                    <div key={ participant._id }>\n\n                        <img src={ participant.body.picture.data.url } alt={ participant.body.name } className=\"rounded mx-auto mx-2 my-1\" style={{\n                                maxWidth: 32,\n                            }} />\n                            \n                        <span className=\"small mx-2\">{ participant.body.name }</span>\n\n                    </div>\n                )\n            }\n\n            <details className=\"container lead mt-2\">\n                    \n                <summary>Rezultat</summary>\n                \n                {\n                    elem.result.map(( result, index ) =>\n\n                        <div key={ result._id } className=\"my-2 p-1 row rounded\" style={{\n                            border: `1px solid ${ types.filter( el => el.name === result.type )[0]?.color || 'whitesmoke' }`,\n                            boxShadow: `0 0 15px -5px ${ types.filter( el => el.name === result.type )[0]?.color || 'whitesmoke' }`,\n                        }}>\n\n                            <figure>\n\n                                <blockquote className=\"blockquote\">\n\n                                    <span style={{\n                                        fontSize: '28px',\n                                        fontWeight: '300',\n                                        lineHeight: '130%',\n                                    }}>{ `${ index + 1 }. ${ result.name }` }</span>\n\n                                </blockquote>\n\n                                <figcaption className=\"blockquote-footer\" style={{\n                                    color: `${ types.filter( el => el.name === result.type )[0]?.color || 'whitesmoke' }`,\n                                    textShadow: `1px 1px 5px ${ types.filter( el => el.name === result.type )[0]?.color || 'whitesmoke' }`\n                                }}>\n\n                                    <cite title=\"food type\">{ result.type }</cite>\n\n                                </figcaption>\n\n                            </figure>\n\n                            <img src={ config.API.image + result.img } alt={ result.name } className=\"rounded mx-auto m-1\" style={{\n                                maxWidth: 128,\n                            }} />\n\n                        </div>\n                    )\n                }\n\n            </details>\n            \n        </div>\n    );\n\n    /*   *   *   *   *   *   *   *   */\n                \n    useEffect(() => {\n\n        fetchSelects();\n\n    }, []);    // eslint-disable-line\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <h2 className=\"lead\">Zapisane rezultaty</h2>\n        \n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default SavedSelects;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst SelectFriend = ({ userFriends, setFriend, url }) => {\n    \n    const [ friends, setFriends ] = useState( null );\n\n    const fetchUsers = async () => {\n\n        const fetchedFriends = new Array( userFriends.length );\n\n        for( let i = 0; i < userFriends.length; i++ ) {\n\n            const friend = await axios.get( url + userFriends[i] );\n\n            fetchedFriends[i] = friend.data;\n        }\n\n        setFriends( prev => fetchedFriends );\n    };\n\n    // render view\n    const render = friends?.map( friend => \n\n        <div key={ friend._id } className=\"col-12 p-1 m-1 border rounded\" onClick={ () => { setFriend( friend._id ) }}>\n\n            <img src={ friend.body.picture.data.url } alt={ friend.body.name } className=\"rounded mx-auto mx-2 my-1 float-left\" style={{ maxWidth: 44, }} />\n\n            <span className=\"leed mx-2\">{ friend.body.name }</span>\n\n        </div>\n    );\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n        \n        fetchUsers();\n\n    }, []);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <h2 className=\"lead\">Zaproś znajomego do wyboru</h2>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default SelectFriend;","import React, { useEffect, useState } from 'react';\n\n// global config\nimport config from '../configs/config';\n\n// icons\nimport { BiHappyAlt, BiHappyHeartEyes } from 'react-icons/bi';\nimport { FaRegSadCry, FaRegSadTear } from 'react-icons/fa';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst MakeRates = ({ foods, types, sendSelect }) => {\n\n    const [ onList, setOnList ] = useState( [] );\n\n    const addToList = ( e, elem, score ) => {\n\n        elem.score = score - Math.random();\n\n        e.target.closest( 'button' ).classList.add( 'selected' );\n\n        e.target.closest( '.swipe' ).classList.add( elem.score > 5 ? 'right' : 'left' );\n            \n        setOnList( prev => [...prev, elem ] );\n    };\n\n    const render = foods.map( elem =>\n\n        <div key={ elem._id } className=\"rounded swipe p-1\" >\n\n            <div className=\"col-12 mx-auto p-2 rounded unrated\" style={{\n                border: `3px solid ${ types.filter( el => el.name === elem.type )[0]?.color || 'whitesmoke' }`,\n                flexGrow: '1',\n            }}>\n\n                <img src={ config.API.image + elem.img } alt={ elem.name } className=\"rounded img-fluid mx-auto my-auto\" />\n\n                <div>\n\n                    <blockquote className=\"blockquote\">\n\n                        <span style={{\n                            fontSize: '28px',\n                            fontWeight: '300',\n                            lineHeight: '110%',\n                            textAlign: 'center',\n                        }}>{ elem.name }</span>\n\n                    </blockquote>\n\n                    <figcaption className=\"blockquote-footer\" style={{\n                        color: '#343434'\n                    }}>\n\n                        <cite title=\"food type\">{ elem.type }</cite>\n\n                    </figcaption>\n\n                </div>\n\n            </div>\n\n            <div className=\"col-12 row mx-auto my-1 p-1\" >\n                    \n                    <button className=\"col-2 mx-auto btn-rate\" onClick={ ( e ) => addToList( e, elem, 2 ) } style={{ backgroundColor: '#dc3545' }}><FaRegSadCry /></button>\n                    \n                    <button className=\"col-2 mx-auto btn-rate\" onClick={ ( e ) => addToList( e, elem, 4 ) } style={{ backgroundColor: '#ffc107' }}><FaRegSadTear /></button>\n\n                    <button className=\"col-2 mx-auto btn-rate\" onClick={ ( e ) => addToList( e, elem, 6 ) } style={{ backgroundColor: '#20c997' }}><BiHappyAlt /></button>\n\n                    <button className=\"col-2 mx-auto btn-rate\" onClick={ ( e ) => addToList( e, elem, 8 ) } style={{ backgroundColor: '#198754' }}><BiHappyHeartEyes /></button>\n\n            </div>\n\n        </div>\n    );\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        if( onList.length === foods.length ) {\n\n            sendSelect( onList );\n    \n            setOnList( prev => [] );\n        }\n        \n    }, [ onList ]);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default MakeRates;","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n// local components\nimport SelectFriend from './selectFriend';\nimport MakeRates from './makeRates';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst MakeSelect = () => {\n\n    const { user, foods, types, setFoods } = useContext( StoreContext );\n    const [ friend, setFriend ] = useState( null );\n\n    // send select to db\n    const sendSelect = async ( set ) => {\n\n        axios.post( config.API.makeSelect ,{\n            participants: [ user._id, friend ],\n            realizedBy: [ user._id ],\n            sets: [ set ],\n        })\n        .then(() => setFoods( prev  => prev.sort(( p, n ) => 0.5 - Math.random())))\n        .finally(() => setFriend( prev => null ));\n    };\n\n    // render view\n    let render = friend\n    ? <MakeRates foods={ foods } types={ types } sendSelect={ sendSelect } />\n    : <SelectFriend userFriends={ user.friends } setFriend={ setFriend } url={ config.API.userID } />;\n    \n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        setFoods( prev  => prev.sort(( p, n ) => 0.5 - Math.random()));\n        \n    }, []);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default MakeSelect;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport config from '../configs/config';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst FetchWaiting = ({ user, setWaiting }) => {\n    \n    const [ onList, setOnList ] = useState( [] );\n\n    // fetches list\n    const fetchOnLIst = async () => {\n\n        const fetchedData = await axios.get( config.API.waitingSelect + user._id );\n\n        if( fetchedData.data.length ) {\n\n            for( let i = 0; i < fetchedData.data.length; i++ ) {\n\n                const elem = fetchedData.data[ i ];\n\n                for( let j = 0; j < elem.participants.length; j++ ) {\n\n                    const participant = elem.participants[ j ];\n\n                    try {\n\n                        const res = await axios.get( config.API.userID + participant );\n                        const participantBody = res.data;\n    \n                        elem.participants[ j ] = participantBody;\n\n                    } catch( err ) {\n\n                        console.error( err );\n\n                        elem.participants[ j ] = {\n                            id: '0',\n                            body: {\n                                name: 'user',\n                                picture: {\n                                    data: {\n                                        url: ''\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        setOnList( prev => fetchedData.data );\n    };\n\n    // delets select\n    const deleteSelect = async ( id ) => {\n\n        axios.delete( config.API.deleteSelect + id )\n        .finally(() => setOnList( prev => prev.filter( el => el._id !== id )));\n    }\n\n    const render = onList.map( elem => \n\n        <div key={ elem._id } className=\"m-1 p-2 border rounded col-12\">\n\n            <p><em>{ elem.date.split( 'T' )[0] }</em></p>\n\n            {\n                elem.participants.map( participant =>\n                    <div key={ participant._id }>\n\n                        <img src={ participant.body.picture.data.url } alt={ participant.body.name } className=\"rounded mx-auto mx-2 my-1\" style={{\n                                maxWidth: 32,\n                            }} />\n                            \n                        <span className=\"small mx-2\">{ participant.body.name }</span>\n\n                    </div>\n                )\n            }\n\n            <div className=\"col-12 row p-1 mt-1\">\n\n                <button className=\"col-5 btn btn-success mx-auto mt-1\" onClick={() => setWaiting( prev => elem )} >Wykonaj</button>\n\n                <button className=\"col-5 btn btn-danger mx-auto mt-1\" onClick={() => deleteSelect( elem._id )} >Anuluj</button>\n\n            </div>\n\n        </div>\n    )\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        fetchOnLIst();\n        \n    }, []);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <h2 className=\"lead\">Zaproszenia do zrealizowania</h2>\n\n        { render }\n        \n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default FetchWaiting;","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n// local components\nimport FetchWaiting from './fetchWaiting';\nimport MakeRates from './makeRates';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst FillSelect = () => {\n\n    const { user, foods, types, setFoods } = useContext( StoreContext );   \n    const [ waiting, setWaiting ] = useState( null );\n\n    const sendSelect = async ( set ) => {\n\n        axios.put( config.API.putSelect + waiting._id ,{\n            participant: user._id,\n            set: set,\n        })\n        .then(() => setFoods( prev  => prev.sort(( p, n ) => 0.5 - Math.random())))\n        .finally(() => setWaiting( prev => null ));\n    };\n\n    const render = !waiting\n    ? <FetchWaiting user={ user } setWaiting={ setWaiting } />  \n    : <MakeRates foods={ foods } types={ types } sendSelect={ sendSelect } />;\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        setFoods( prev  => prev.sort(( p, n ) => 0.5 - Math.random()));\n\n    }, []);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default FillSelect;","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst ShowProfile = () => {\n\n    const { user, setUser } = useContext( StoreContext );\n\n    const [ friends, setFriends ] = useState( null );\n    const [ searchs, setSearchs ] = useState( null );\n    const [ value, setValue ] = useState( '' );\n\n    const fetchFriends = async () => {\n\n        const fetchedFriends = new Array( user.friends.length );\n\n        for( let i = 0; i < user.friends.length; i++ ) {\n\n            const friend = await axios.get( config.API.userID + user.friends[i] );\n\n            fetchedFriends[i] = friend.data;\n        }\n\n        setFriends( prev => fetchedFriends );\n    };\n\n    const fetchSearchs = async ({ target }) => {\n\n        setValue( prev => target.value );\n\n        if( target.value.trim().length >= 3 ) {\n\n            const fetchedSearchs = await axios.get( config.API.userName + target.value.trim());\n\n            setSearchs( prev => fetchedSearchs.data.filter( el => !user.friends.includes( el._id ) && ( el._id !== user._id )));\n                        \n        } else {\n\n            setSearchs( prev => null )\n        }\n    };\n\n    const addFriend = async ( id ) => {\n\n        try {\n\n            await axios.put( config.API.userAdd + user._id + '/' + id );\n            \n            const patchUser = await axios.get( config.API.userAuth + user.auth );\n\n            setUser( prev => patchUser.data );\n\n            setSearchs( prev => null )\n\n            setValue( prev => '' );\n\n        } catch( err ) {\n\n            console.error( err );\n        }\n    }\n\n    const logout = async () => {\n\n        localStorage.clear();\n\n        setUser( prev => null );\n    }\n\n    // render friends\n    const renderFriends = friends?.map( friend => \n\n        <div key={ friend._id } className=\"col-12 p-1 mx-auto my-1 border rounded\">\n\n            <img src={ friend.body.picture.data.url } alt={ friend.body.name } className=\"rounded mx-auto mx-2 my-1 float-left\" style={{ maxWidth: 44, }} />\n\n            <span className=\"leed mx-2\">{ friend.body.name }</span>\n\n        </div>\n    );\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        fetchFriends();\n        \n    }, [ user.friends ]);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <section className=\"col-12 p-2 m-1\">\n\n            <div>\n\n                <img src={ user.body.picture.data.url } alt={ user.body.name } className=\"rounded mx-auto mx-2 my-1\" />\n                                \n                <span className=\"lead mx-2\"><em>{ user.body.name }</em></span>\n\n            </div>        \n\n            <button className=\"col-12 btn btn-danger\" onClick={ logout }>Wyloguj</button>\n\n            <hr />\n\n        </section>\n\n        <section className=\"row col-12 my-3 mx-auto\">\n\n            <div className=\"col-12 input-group\">\n                \n                <input type=\"text\" className=\"form-control\" placeholder=\"Dodaj znajomego\" value={ value } onChange={ fetchSearchs } />\n                <div className=\"input-group-text\">&#128269;</div>\n\n            </div>\n\n            <div className=\"col-12 my-2\">\n\n                {\n                    searchs?.map( elem => \n                        \n                        <div className=\"col-12 card p-1 mx-auto my-1\" key={ elem._id } >\n\n                                <img src={ elem.body.picture.data.url } alt={ elem.body.name } className=\"rounded mx-auto mx-2 my-1\" />\n                                                \n                                <p className=\"mx-auto\"><em>{ elem.body.name }</em></p>           \n\n                                <button className=\"btn btn-info\" onClick={() => addFriend( elem._id )}>+</button>\n                        </div>\n                    )\n                }\n\n            </div>\n\n        </section>\n\n        <section  className=\"row col-12 p-2\">\n\n            <h2 className=\"lead\">Znajomi</h2>\n\n            { renderFriends }\n\n        </section>\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default ShowProfile;","import React, { useState, useEffect } from 'react';\n\n// global config\nimport config from '../configs/config';\n\n// components\nimport ViewSelector from '../components/viewSelector';\nimport SavedSelects from '../components/savedSelects';\nimport MakeSelect from '../components/makeSelect';\nimport FillSelect from '../components/fillSelect';\nimport ShowProfile from '../components/showProfile';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst View = () => {\n\n    const [ view, setView ] = useState( config.view.profile );\n    const [ swipe, setSwipe ] = useState( null );\n\n    let render;\n\n    switch( view ) {\n\n        case config.view.saved: render = <SavedSelects />; break;\n        \n        case config.view.select: render = <MakeSelect />; break;\n        \n        case config.view.waiting: render = <FillSelect />; break;\n        \n        case config.view.profile: render = <ShowProfile />; break;\n\n        default: render = <ShowProfile />; break;\n    };\n\n    /*   *   *   *   *   *   *   *   */\n\n    const touch = { x: null, y: null };\n\n    const getTouch = ( event ) => event.touches;\n\n    const handleTouchStart = ( event ) => {\n\n        const firstTouch = getTouch( event )[0];\n\n        touch.x = firstTouch.clientX;\n        touch.y = firstTouch.clientY;\n    };\n\n    const handleTouchMove = ( event ) => {\n\n        if( !touch.x || !touch.y ) {\n            return;\n        }\n\n        const next_x = event.touches[0].clientX;\n        const next_y = event.touches[0].clientY;\n        \n        const delta_x = touch.x - next_x;\n        const delta_y = touch.y - next_y;\n        \n        if( Math.abs( delta_x ) > Math.abs( delta_y ) && Math.abs( delta_x ) > window.innerWidth / 3 ) {\n\n            const min = 0;\n            const max = config.views.length - 1;\n            const index = config.views.indexOf( view );\n\n            if( delta_x < 0 && index - 1 >= min ) {\n\n                setView( config.views[ index - 1 ] );\n                setSwipe( 'left' );\n            }\n\n            if( delta_x > 0 && index + 1 <= max ) {\n                \n                setView( config.views[ index + 1 ] );\n                setSwipe( 'right' );                \n            }\n        }\n    };\n\n    useEffect(() => {\n\n        // swipe events\n        document.addEventListener( 'touchstart', handleTouchStart );\n        document.addEventListener( 'touchmove', handleTouchMove );\n\n        return(() => {\n\n            document.removeEventListener( 'touchstart', handleTouchStart );\n            document.removeEventListener( 'touchmove', handleTouchMove );\n        });\n\n    }, [ view ]);     // eslint-disable-line\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n        <ViewSelector curr={ view } views={ config.view } selectView={ setView } />\n\n        <main id=\"view\" className={ `p-1 ${ swipe }`} key={ view } >\n\n            { render }\n\n        </main>\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default View;","import React, { useContext } from 'react';\n\n// global context\nimport { StoreContext } from '../configs/store';\n\n// local modules\nimport Login from './login';\nimport View from './view';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst Index = () => {\n\n    const { user } = useContext( StoreContext );\n\n    /*   *   *   *   *   *   *   *   */\n    \n    const render = user ? <View /> : <Login />;\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default Index;","import React from 'react';\n\n// stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/main.scss';\n\n// global store\nimport { StoreProvider } from './configs/store';\n\n// local modules\nimport Index from './layouts/index';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst App = () => {\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <StoreProvider>\n\n        <Index />\n\n    </StoreProvider>\n    );\n};\n\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// local files\nimport App from './App';\n\n\n/*  Final render\n/*   *   *   *   *   *   *   *   *   *   */\n\nReactDOM.render(\n\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);"],"sourceRoot":""}