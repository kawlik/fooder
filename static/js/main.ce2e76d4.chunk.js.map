{"version":3,"sources":["configs/config.js","configs/store.jsx","layouts/login.jsx","components/viewSelector.jsx","components/savedSelects.jsx","components/selectFriend.jsx","components/makeRates.jsx","components/makeSelect.jsx","components/fetchWaiting.jsx","components/fillSelect.jsx","components/showProfile.jsx","layouts/view.jsx","layouts/index.jsx","App.jsx","index.js"],"names":["config","API","host","image","types","foods","makeSelect","authFacebook","userAuth","userName","userID","userAdd","newestSelect","waitingSelect","putSelect","deleteSelect","view","saved","select","waiting","profile","StoreContext","createContext","StoreProvider","children","useState","user","setUser","setTypes","setFoods","readSavedUser","a","readUser","JSON","parse","localStorage","getItem","hasOwnProperty","axios","get","auth","restoredUser","data","perv","fetchTypes","fetchedTypes","prev","fetchFoods","storeValues","useEffect","setItem","stringify","Provider","value","Login","useContext","token","setToken","login","e","preventDefault","res","className","type","onChange","target","href","onClick","ViewSelector","curr","views","selectView","setView","btn","closest","id","SavedSelects","selects","setSelects","fetchSelects","_id","length","i","j","participants","participant","participantBody","console","error","body","name","picture","url","render","map","elem","date","split","src","alt","style","maxWidth","result","index","border","filter","el","color","boxShadow","fontSize","fontWeight","lineHeight","textShadow","title","img","SelectFriend","userFriends","setFriend","friends","setFriends","fetchUsers","fetchedFriends","Array","friend","MakeRates","sendSelect","onList","setOnList","addToList","score","Math","random","classList","add","flexGrow","textAlign","backgroundColor","MakeSelect","set","post","realizedBy","sets","finally","FetchWaiting","setWaiting","fetchOnLIst","fetchedData","delete","FillSelect","put","ShowProfile","searchs","setSearchs","setValue","fetchFriends","fetchSearchs","trim","fetchedSearchs","includes","addFriend","patchUser","logout","clear","renderFriends","placeholder","View","Index","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce2e76d4.chunk.js","sourcesContent":["/*  Config object\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst config = {\n\n    // API endpoinds\n    API: {\n\n        host: 'https://fooder-back.herokuapp.com/',\n\n        image: 'https://fooder-back.herokuapp.com/img/',\n\n        types: 'https://fooder-back.herokuapp.com/type/',\n\n        foods: 'https://fooder-back.herokuapp.com/food/',\n\n        makeSelect: 'https://fooder-back.herokuapp.com/select/',\n\n        authFacebook: 'https://fooder-back.herokuapp.com/auth/facebook/',\n\n        userAuth: 'https://fooder-back.herokuapp.com/user/auth/',\n\n        userName: 'https://fooder-back.herokuapp.com/user/name/',\n\n        userID: 'https://fooder-back.herokuapp.com/user/id/',\n\n        userAdd: 'https://fooder-back.herokuapp.com/user/friend/',\n\n        newestSelect: 'https://fooder-back.herokuapp.com/select/newest/',\n\n        waitingSelect: 'https://fooder-back.herokuapp.com/select/waiting/',\n\n        putSelect: 'https://fooder-back.herokuapp.com/select/id/',\n\n        deleteSelect: 'https://fooder-back.herokuapp.com/select/',\n    },\n\n    // views values\n    view: {\n\n        saved: 'saved',\n        \n        select: 'select',\n\n        waiting: 'waiting',\n        \n        profile: 'profile',\n    },\n};\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default config;","import React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// global config\nimport config from './config';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\n// store context init\nconst StoreContext = createContext( null );\n\n// store provider wrapper\nconst StoreProvider = ({ children }) => {\n\n    const [ user, setUser ] = useState( null );\n    const [ types, setTypes ] = useState( [] );\n    const [ foods, setFoods ] = useState( [] );\n\n    // reads and sets saved user\n    const readSavedUser = async () => {\n\n        const readUser = JSON.parse( localStorage.getItem( 'user' ));\n\n        if( readUser?.hasOwnProperty( 'auth' )) {\n            \n            const restoredUser = await axios.get( config.API.userAuth + readUser.auth );\n\n            if( restoredUser.data ) { setUser( perv => restoredUser.data ) }\n        }\n    };\n    \n    // saves usser on localStorage\n    const saveUser = () => {\n\n        localStorage.setItem( 'user', JSON.stringify( user ));\n    };\n\n    // reads available food types\n    const fetchTypes = async () => {\n\n        const fetchedTypes = await axios.get( config.API.types );\n\n        setTypes( prev => fetchedTypes.data );\n    };\n\n    // reads available foods\n    const fetchFoods = async () => {\n\n        const fetchedTypes = await axios.get( config.API.foods );\n\n        setFoods( prev => fetchedTypes.data );\n    };\n\n    /*   *   *   *   *   *   *   *   */\n\n    const storeValues = {\n\n        user, setUser,  //  user propeties\n\n        types, setTypes,    //  food types propeties\n\n        foods, setFoods,    //  available foods\n    };\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        if( !user ) {\n\n            readSavedUser();\n        }\n\n        if( user ) {\n\n            saveUser();\n\n            fetchTypes();\n\n            fetchFoods();\n        }\n\n    }, [ user ]);   // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <StoreContext.Provider value={ storeValues } >\n            \n        { children }\n\n    </StoreContext.Provider>\n    );\n};\n\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default StoreProvider;\nexport { StoreContext, StoreProvider };","import React, { useContext, useState } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst Login = () => {\n\n    const { setUser } = useContext( StoreContext );\n\n    const [ token, setToken ] = useState( '' );\n\n    /*   *   *   *   *   *   *   *   */\n    \n    const updateToken = ( e ) => {\n\n        setToken( prev => e.target.value )\n    };\n\n    const login = async ( e ) => {\n\n        e.preventDefault();\n        \n        const res = await axios.get( config.API.userAuth + token );\n        const user = res.data;\n\n        if( user?.auth === token ) {\n\n            setUser( user );\n        }\n    };\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <section className=\"container row my-auto\">\n\n            <form className=\"col-12 col-md-8 mx-auto p-2 card shadow bg-light\">\n\n                <div className=\"m-3\">\n                    <label className=\"form-label lead\">Twój token logowania</label>\n                    <input className=\"form-control\" type=\"password\" onChange={ updateToken } value={ token } />\n                </div>\n                \n\n                <div className=\"m-3\">\n                    <a target=\"blank\" href={ config.API.authFacebook } className=\"btn btn-primary me-1\">Pobierz z Facebook</a>\n                    <button type=\"button\" className=\"btn btn-success ms-1\" onClick={ login }>Zaloguj</button>\n                </div>\n\n            </form>\n\n        </section>\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default Login;","import React from 'react';\n\n// fonts module\nimport { FaUser, FaCalendarAlt, FaCalendarCheck, FaCalendarPlus } from 'react-icons/fa';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst ViewSelector = ({ curr, views, selectView }) => {\n\n\n    const setView = ( e ) => {\n\n        const btn = e.target.closest( 'button' );\n\n        selectView( prev => btn.value )\n    };\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <nav id=\"selector\" className=\"row p-3\">\n\n        <button onClick={ setView } value={ views.saved } type=\"button\" className={ `col-2 selectItem mx-auto ${ curr === views.saved && 'active'}` }><FaCalendarCheck /></button>\n\n        <button onClick={ setView } value={ views.select } type=\"button\" className={ `col-2 selectItem mx-auto ${ curr === views.select && 'active'}` }><FaCalendarPlus /></button>\n\n        <button onClick={ setView } value={ views.waiting } type=\"button\" className={ `col-2 selectItem mx-auto ${ curr === views.waiting && 'active'}` }><FaCalendarAlt /></button>\n\n        <button onClick={ setView } value={ views.profile } type=\"button\" className={ `col-2 selectItem mx-auto ${ curr === views.profile && 'active'}` }><FaUser /></button>\n\n    </nav>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default ViewSelector;","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst SavedSelects = () => {\n\n    const { user, types } = useContext( StoreContext );\n\n    const [ selects, setSelects ] = useState( [] );\n\n    const fetchSelects = async () => {\n\n        const fetchSelects = await axios.get( config.API.newestSelect + user._id );\n\n        if( fetchSelects.data.length ) {\n\n            for( let i = 0; i < fetchSelects.data.length; i++ ) {\n\n                const select = fetchSelects.data[ i ];\n\n                for( let j = 0; j < select.participants.length; j++ ) {\n\n                    const participant = select.participants[ j ];\n\n                    try {\n\n                        const res = await axios.get( config.API.userID + participant );\n                        const participantBody = res.data;\n    \n                        select.participants[ j ] = participantBody;\n\n                    } catch( err ) {\n\n                        console.error( err );\n\n                        select.participants[ j ] = {\n                            id: '0',\n                            body: {\n                                name: 'user',\n                                picture: {\n                                    data: {\n                                        url: ''\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            setSelects( prev => fetchSelects.data );\n        }\n    };\n\n    const render = selects.map( elem => \n\n        <div key={ elem._id } className=\"card col-12 p-2 m-1\" >\n\n            <p><em>{ elem.date.split( 'T' )[0] }</em></p>\n\n            {\n                elem.participants.map( participant =>\n                    <div key={ participant._id }>\n\n                        <img src={ participant.body.picture.data.url } alt={ participant.body.name } className=\"rounded mx-auto mx-2 my-1\" style={{\n                                maxWidth: 32,\n                            }} />\n                            \n                        <span className=\"small mx-2\">{ participant.body.name }</span>\n\n                    </div>\n                )\n            }\n\n            <details className=\"container lead mt-2\">\n                    \n                <summary>Rezultat</summary>\n                \n                {\n                    elem.result.map(( result, index ) =>\n\n                        <div key={ result._id } className=\"my-2 p-1 row rounded\" style={{\n                            border: `1px solid ${ types.filter( el => el.name === result.type )[0]?.color || 'whitesmoke' }`,\n                            boxShadow: `0 0 15px -5px ${ types.filter( el => el.name === result.type )[0]?.color || 'whitesmoke' }`,\n                        }}>\n\n                            <figure>\n\n                                <blockquote className=\"blockquote\">\n\n                                    <span style={{\n                                        fontSize: '28px',\n                                        fontWeight: '300',\n                                        lineHeight: '130%',\n                                    }}>{ `${ index + 1 }. ${ result.name }` }</span>\n\n                                </blockquote>\n\n                                <figcaption className=\"blockquote-footer\" style={{\n                                    color: `${ types.filter( el => el.name === result.type )[0]?.color || 'whitesmoke' }`,\n                                    textShadow: `1px 1px 5px ${ types.filter( el => el.name === result.type )[0]?.color || 'whitesmoke' }`\n                                }}>\n\n                                    <cite title=\"food type\">{ result.type }</cite>\n\n                                </figcaption>\n\n                            </figure>\n\n                            <img src={ config.API.image + result.img } alt={ result.name } className=\"rounded mx-auto m-1\" style={{\n                                maxWidth: 128,\n                            }} />\n\n                        </div>\n                    )\n                }\n\n            </details>\n            \n        </div>\n    );\n\n    /*   *   *   *   *   *   *   *   */\n                \n    useEffect(() => {\n\n        fetchSelects();\n\n    }, []);    // eslint-disable-line\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <h2 className=\"lead\">Zapisane rezultaty</h2>\n        \n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default SavedSelects;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst SelectFriend = ({ userFriends, setFriend, url }) => {\n    \n    const [ friends, setFriends ] = useState( null );\n\n    const fetchUsers = async () => {\n\n        const fetchedFriends = new Array( userFriends.length );\n\n        for( let i = 0; i < userFriends.length; i++ ) {\n\n            const friend = await axios.get( url + userFriends[i] );\n\n            fetchedFriends[i] = friend.data;\n        }\n\n        setFriends( prev => fetchedFriends );\n    };\n\n    // render view\n    const render = friends?.map( friend => \n\n        <div key={ friend._id } className=\"col-12 p-1 m-1 border rounded\" onClick={ () => { setFriend( friend._id ) }}>\n\n            <img src={ friend.body.picture.data.url } alt={ friend.body.name } className=\"rounded mx-auto mx-2 my-1 float-left\" style={{ maxWidth: 44, }} />\n\n            <span className=\"leed mx-2\">{ friend.body.name }</span>\n\n        </div>\n    );\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n        \n        fetchUsers();\n\n    }, []);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <h2 className=\"lead\">Zaproś znajomego do wyboru</h2>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default SelectFriend;","import React, { useEffect, useState } from 'react';\n\n// global config\nimport config from '../configs/config';\n\n// icons\nimport { BiHappyAlt, BiHappyHeartEyes } from 'react-icons/bi';\nimport { FaRegSadCry, FaRegSadTear } from 'react-icons/fa';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst MakeRates = ({ foods, types, sendSelect }) => {\n\n    const [ onList, setOnList ] = useState( [] );\n\n    const addToList = ( e, elem, score ) => {\n\n        elem.score = score - Math.random();\n\n        e.target.closest( 'button' ).classList.add( 'selected' );\n\n        e.target.closest( '.swipe' ).classList.add( elem.score > 5 ? 'right' : 'left' );\n            \n        setOnList( prev => [...prev, elem ] );\n    };\n\n    const render = foods.map( elem =>\n\n        <div key={ elem._id } className=\"rounded swipe p-1\" >\n\n            <div className=\"col-12 mx-auto p-2 rounded unrated\" style={{\n                border: `3px solid ${ types.filter( el => el.name === elem.type )[0]?.color || 'whitesmoke' }`,\n                flexGrow: '1',\n            }}>\n\n                <img src={ config.API.image + elem.img } alt={ elem.name } className=\"rounded img-fluid mx-auto my-auto\" />\n\n                <div>\n\n                    <blockquote className=\"blockquote\">\n\n                        <span style={{\n                            fontSize: '28px',\n                            fontWeight: '300',\n                            lineHeight: '110%',\n                            textAlign: 'center',\n                        }}>{ elem.name }</span>\n\n                    </blockquote>\n\n                    <figcaption className=\"blockquote-footer\" style={{\n                        color: '#343434'\n                    }}>\n\n                        <cite title=\"food type\">{ elem.type }</cite>\n\n                    </figcaption>\n\n                </div>\n\n            </div>\n\n            <div className=\"col-12 row mx-auto my-1 p-1\" >\n                    \n                    <button className=\"col-2 mx-auto btn-rate\" onClick={ ( e ) => addToList( e, elem, 2 ) } style={{ backgroundColor: '#dc3545' }}><FaRegSadCry /></button>\n                    \n                    <button className=\"col-2 mx-auto btn-rate\" onClick={ ( e ) => addToList( e, elem, 4 ) } style={{ backgroundColor: '#ffc107' }}><FaRegSadTear /></button>\n\n                    <button className=\"col-2 mx-auto btn-rate\" onClick={ ( e ) => addToList( e, elem, 6 ) } style={{ backgroundColor: '#20c997' }}><BiHappyAlt /></button>\n\n                    <button className=\"col-2 mx-auto btn-rate\" onClick={ ( e ) => addToList( e, elem, 8 ) } style={{ backgroundColor: '#198754' }}><BiHappyHeartEyes /></button>\n\n            </div>\n\n        </div>\n    );\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        if( onList.length === foods.length ) {\n\n            sendSelect( onList );\n    \n            setOnList( prev => [] );\n        }\n        \n    }, [ onList ]);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default MakeRates;","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n// local components\nimport SelectFriend from './selectFriend';\nimport MakeRates from './makeRates';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst MakeSelect = () => {\n\n    const { user, foods, types } = useContext( StoreContext );\n    const [ friend, setFriend ] = useState( null );\n\n    // send select to db\n    const sendSelect = async ( set ) => {\n\n        axios.post( config.API.makeSelect ,{\n            participants: [ user._id, friend ],\n            realizedBy: [ user._id ],\n            sets: [ set ],\n        })\n        .finally(() => setFriend( prev => null ));\n    };\n\n    // render view\n    let render = friend\n    ? <MakeRates foods={ foods } types={ types } sendSelect={ sendSelect } />\n    : <SelectFriend userFriends={ user.friends } setFriend={ setFriend } url={ config.API.userID } />;\n    \n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n        \n    }, []);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default MakeSelect;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport config from '../configs/config';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst FetchWaiting = ({ user, setWaiting }) => {\n    \n    const [ onList, setOnList ] = useState( [] );\n\n    // fetches list\n    const fetchOnLIst = async () => {\n\n        const fetchedData = await axios.get( config.API.waitingSelect + user._id );\n\n        if( fetchedData.data.length ) {\n\n            for( let i = 0; i < fetchedData.data.length; i++ ) {\n\n                const elem = fetchedData.data[ i ];\n\n                for( let j = 0; j < elem.participants.length; j++ ) {\n\n                    const participant = elem.participants[ j ];\n\n                    try {\n\n                        const res = await axios.get( config.API.userID + participant );\n                        const participantBody = res.data;\n    \n                        elem.participants[ j ] = participantBody;\n\n                    } catch( err ) {\n\n                        console.error( err );\n\n                        elem.participants[ j ] = {\n                            id: '0',\n                            body: {\n                                name: 'user',\n                                picture: {\n                                    data: {\n                                        url: ''\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        setOnList( prev => fetchedData.data );\n    };\n\n    // delets select\n    const deleteSelect = async ( id ) => {\n\n        axios.delete( config.API.deleteSelect + id )\n        .finally(() => setOnList( prev => prev.filter( el => el._id !== id )));\n    }\n\n    const render = onList.map( elem => \n\n        <div key={ elem._id } className=\"m-1 p-2 border rounded col-12\">\n\n            <p><em>{ elem.date.split( 'T' )[0] }</em></p>\n\n            {\n                elem.participants.map( participant =>\n                    <div key={ participant._id }>\n\n                        <img src={ participant.body.picture.data.url } alt={ participant.body.name } className=\"rounded mx-auto mx-2 my-1\" style={{\n                                maxWidth: 32,\n                            }} />\n                            \n                        <span className=\"small mx-2\">{ participant.body.name }</span>\n\n                    </div>\n                )\n            }\n\n            <div className=\"col-12 row p-1 mt-1\">\n\n                <button className=\"col-5 btn btn-success mx-auto mt-1\" onClick={() => setWaiting( prev => elem )} >Wykonaj</button>\n\n                <button className=\"col-5 btn btn-danger mx-auto mt-1\" onClick={() => deleteSelect( elem._id )} >Anuluj</button>\n\n            </div>\n\n        </div>\n    )\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        fetchOnLIst();\n        \n    }, []);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <h2 className=\"lead\">Zaproszenia do zrealizowania</h2>\n\n        { render }\n        \n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default FetchWaiting;","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n// local components\nimport FetchWaiting from './fetchWaiting';\nimport MakeRates from './makeRates';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst FillSelect = () => {\n\n    const { user, foods, types } = useContext( StoreContext );   \n    const [ waiting, setWaiting ] = useState( null );\n\n    const sendSelect = async ( set ) => {\n\n        axios.put( config.API.putSelect + waiting._id ,{\n            participant: user._id,\n            set: set,\n        })\n        .finally(() => setWaiting( prev => null ));\n    };\n\n    const render = !waiting\n    ? <FetchWaiting user={ user } setWaiting={ setWaiting } />  \n    : <MakeRates foods={ foods } types={ types } sendSelect={ sendSelect } />;\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n        \n    }, []);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default FillSelect;","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\n\n// global context & config\nimport { StoreContext } from '../configs/store';\nimport config from '../configs/config';\n\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst ShowProfile = () => {\n\n    const { user, setUser } = useContext( StoreContext );\n\n    const [ friends, setFriends ] = useState( null );\n    const [ searchs, setSearchs ] = useState( null );\n    const [ value, setValue ] = useState( '' );\n\n    const fetchFriends = async () => {\n\n        const fetchedFriends = new Array( user.friends.length );\n\n        for( let i = 0; i < user.friends.length; i++ ) {\n\n            const friend = await axios.get( config.API.userID + user.friends[i] );\n\n            fetchedFriends[i] = friend.data;\n        }\n\n        setFriends( prev => fetchedFriends );\n    };\n\n    const fetchSearchs = async ({ target }) => {\n\n        setValue( prev => target.value );\n\n        if( target.value.trim().length >= 3 ) {\n\n            const fetchedSearchs = await axios.get( config.API.userName + target.value.trim());\n\n            setSearchs( prev => fetchedSearchs.data.filter( el => !user.friends.includes( el._id ) && ( el._id !== user._id )));\n                        \n        } else {\n\n            setSearchs( prev => null )\n        }\n    };\n\n    const addFriend = async ( id ) => {\n\n        try {\n\n            await axios.put( config.API.userAdd + user._id + '/' + id );\n            \n            const patchUser = await axios.get( config.API.userAuth + user.auth );\n\n            setUser( prev => patchUser.data );\n\n            setSearchs( prev => null )\n\n            setValue( prev => '' );\n\n        } catch( err ) {\n\n            console.error( err );\n        }\n    }\n\n    const logout = async () => {\n\n        localStorage.clear();\n\n        setUser( prev => null );\n    }\n\n    // render friends\n    const renderFriends = friends?.map( friend => \n\n        <div key={ friend._id } className=\"col-12 p-1 mx-auto my-1 border rounded\">\n\n            <img src={ friend.body.picture.data.url } alt={ friend.body.name } className=\"rounded mx-auto mx-2 my-1 float-left\" style={{ maxWidth: 44, }} />\n\n            <span className=\"leed mx-2\">{ friend.body.name }</span>\n\n        </div>\n    );\n\n    /*   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        fetchFriends();\n        \n    }, [ user.friends ]);    // eslint-disable-line\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        <section className=\"col-12 p-2 m-1\">\n\n            <div>\n\n                <img src={ user.body.picture.data.url } alt={ user.body.name } className=\"rounded mx-auto mx-2 my-1\" />\n                                \n                <span className=\"lead mx-2\"><em>{ user.body.name }</em></span>\n\n            </div>        \n\n            <button className=\"col-12 btn btn-danger\" onClick={ logout }>Wyloguj</button>\n\n            <hr />\n\n        </section>\n\n        <section className=\"row col-12 my-3 mx-auto\">\n\n            <div className=\"col-12 input-group\">\n                \n                <input type=\"text\" className=\"form-control\" placeholder=\"Dodaj znajomego\" value={ value } onChange={ fetchSearchs } />\n                <div className=\"input-group-text\">&#128269;</div>\n\n            </div>\n\n            <div className=\"col-12 my-2\">\n\n                {\n                    searchs?.map( elem => \n                        \n                        <div className=\"col-12 card p-1 mx-auto my-1\" key={ elem._id } >\n\n                                <img src={ elem.body.picture.data.url } alt={ elem.body.name } className=\"rounded mx-auto mx-2 my-1\" />\n                                                \n                                <p className=\"mx-auto\"><em>{ elem.body.name }</em></p>           \n\n                                <button className=\"btn btn-info\" onClick={() => addFriend( elem._id )}>+</button>\n                        </div>\n                    )\n                }\n\n            </div>\n\n        </section>\n\n        <section  className=\"row col-12 p-2\">\n\n            <h2 className=\"lead\">Znajomi</h2>\n\n            { renderFriends }\n\n        </section>\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default ShowProfile;","import React, { useState } from 'react';\n\n// global config\nimport config from '../configs/config';\n\n// components\nimport ViewSelector from '../components/viewSelector';\nimport SavedSelects from '../components/savedSelects';\nimport MakeSelect from '../components/makeSelect';\nimport FillSelect from '../components/fillSelect';\nimport ShowProfile from '../components/showProfile';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst View = () => {\n\n    const [ view, setView ] = useState( config.view.profile );\n\n\n    let render;\n    \n    switch( view ) {\n\n        default: render = <MakeSelect />; break;\n        \n        case config.view.saved: render = <SavedSelects />; break;\n        \n        case config.view.waiting: render = <FillSelect />; break;\n\n        case config.view.profile: render = <ShowProfile />; break;\n    };\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n        <ViewSelector curr={ view } views={ config.view } selectView={ setView } />\n\n        <main id=\"view\" className=\"p-2\">\n\n            { render }\n\n        </main>\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default View;","import React, { useContext } from 'react';\n\n// global context\nimport { StoreContext } from '../configs/store';\n\n// local modules\nimport Login from './login';\nimport View from './view';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst Index = () => {\n\n    const { user } = useContext( StoreContext );\n\n    /*   *   *   *   *   *   *   *   */\n    \n    const render = user ? <View /> : <Login />;\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <>\n\n        { render }\n\n    </>\n    );\n};\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default Index;","import React from 'react';\n\n// stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/main.scss';\n\n// global store\nimport { StoreProvider } from './configs/store';\n\n// local modules\nimport Index from './layouts/index';\n\n\n/*  Module schema\n/*   *   *   *   *   *   *   *   *   *   */\n\nconst App = () => {\n\n\n    /*   *   *   *   *   *   *   *   */\n\n    return(\n    <StoreProvider>\n\n        <Index />\n\n    </StoreProvider>\n    );\n};\n\n\n\n/*  Module export\n/*   *   *   *   *   *   *   *   *   *   */\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// local files\nimport App from './App';\n\n\n/*  Final render\n/*   *   *   *   *   *   *   *   *   *   */\n\nReactDOM.render(\n\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);"],"sourceRoot":""}